HTML File:


<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>PDF Text Extractor</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #f0f0f0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        margin: 0;
      }
      .container {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        text-align: center;
        max-width: 500px;
        width: 100%;
      }
      h1 {
        color: #333;
      }
      input[type="file"] {
        margin: 20px 0;
      }
      button {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin: 10px;
      }
      button:disabled {
        background-color: #ccc;
        cursor: not-allowed;
      }
      button:hover:not(:disabled) {
        background-color: #0056b3;
      }
      .result-container {
        margin-top: 20px;
        text-align: left;
      }
      .result {
        margin-bottom: 20px;
      }
      .filename {
        font-weight: bold;
      }
      textarea {
        width: 100%;
        height: 100px;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        resize: none;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>PDF Text Extractor</h1>
      <input type="file" id="inpFile" multiple />
      <button type="button" id="btnUpload" disabled>Upload</button>
      <div id="resultContainer" class="result-container"></div>
    </div>
    <script>
      const btnUpload = document.getElementById("btnUpload");
      const inpFile = document.getElementById("inpFile");
      const resultContainer = document.getElementById("resultContainer");

      inpFile.addEventListener("change", () => {
        btnUpload.disabled = !inpFile.files.length;
      });

      btnUpload.addEventListener("click", () => {
        if (inpFile.files.length === 0) {
          return;
        }

        btnUpload.disabled = true;
        resultContainer.innerHTML = '';

        const formData = new FormData();
        for (let i = 0; i < inpFile.files.length; i++) {
          formData.append("pdfFiles", inpFile.files[i]);
        }

        fetch("/extract-text", {
          method: "post",
          body: formData,
        })
          .then((response) => response.json())
          .then((extractedTexts) => {
            extractedTexts.forEach(file => {
              const fileResult = document.createElement('div');
              fileResult.className = 'result';
              const filename = document.createElement('p');
              filename.className = 'filename';
              filename.textContent = file.filename;
              const textarea = document.createElement('textarea');
              textarea.textContent = file.text;
              textarea.readOnly = true;
              const copyButton = document.createElement('button');
              copyButton.textContent = 'Copy Text';
              copyButton.addEventListener('click', () => {
                textarea.select();
                document.execCommand('copy');
                alert('Text copied to clipboard!');
              });
              fileResult.appendChild(filename);
              fileResult.appendChild(textarea);
              fileResult.appendChild(copyButton);
              resultContainer.appendChild(fileResult);
            });
          })
          .catch((error) => {
            console.error("Error uploading files:", error);
            resultContainer.innerHTML = '<p>Error extracting text from the PDF files.</p>';
          })
          .finally(() => {
            btnUpload.disabled = false;
          });
      });
    </script>
  </body>
</html>



